select
	INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB,
	EWC.ADDITIONALDETAILS ->> 'ward' as WARD,
	name,
	mobilenumber,
	address,
	EWC.CONNECTIONNO,
	EWC.OLDCONNECTIONNO,
	ews.connectiontype,
	DM.DEMANDCREATIONDATE,
	DM.MONTHOFTAXPERIODTO,
	DM.TAXPERIODFROM,
	DM.TAXPERIODTO,
	DM.DEMANDID,
	DM.CURRENTDEMAND as CURRENTDEMAND,
	coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) as arrear,
	case
		when (DM.CURRENTDEMAND + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 then DM.CURRENTDEMAND + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)
		else 0
	end as TOTALDUE
from
	EG_WS_CONNECTION EWC
inner join EG_WS_SERVICE EWS on
	EWC.ID = EWS.CONNECTION_ID
left outer join(
	select
		edv.consumercode,
		to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate,
		TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO,
		to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom,
		to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto,
		to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo,
		edv2.demandid,
		edv2.TAXAMTPERDEMAND - edv2.COLLECTEDAMTPERDEMAND as CURRENTDEMAND,
		edv.status,
		edv.businessservice
	from
		EGBS_DEMAND_V1 EDV
		--inner join 
		--EGBS_DEMANDDETAIL_V1 EDV2 
		--on 	EDV.tenantid='od.cuttack' and EDV.ID=EDV2.DEMANDID group by EDV.CONSUMERCODE
		inner join (
			select
			SUM(case when egb1.taxheadcode != 'WS_ADVANCE_CARRYFORWARD' then egb1.TAXAMOUNT else 0 end) as TAXAMTPERDEMAND,
			SUM(case when egb1.taxheadcode != 'WS_ADVANCE_CARRYFORWARD' then egb1.COLLECTIONAMOUNT else -egb1.TAXAMOUNT end) as COLLECTEDAMTPERDEMAND,
			egb1.demandid
			from
				egbs_demanddetail_v1 egb1
			where
			egb1.tenantid = 'od.cuttack' and egb1.taxheadcode like 'WS%' group by egb1.demandid) edv2 on
		EDV.ID = EDV2.DEMANDID)DM on
	EWC.connectionno = DM.CONSUMERCODE
	--old-		
	--inner join(
		--select
		--	egb1.demandid,
		--	egb1.taxheadcode,
		--	egb1.taxamount
		--from
		--	egbs_demanddetail_v1 egb1
		--where
		--	egb1.taxheadcode = 'WS_CHARGE'
		--	and egb1.tenantid = 'od.cuttack')edv2 on
		--EDV.ID = EDV2.DEMANDID)DM on
	--EWC.connectionno = DM.CONSUMERCODE
left outer join(
	select
		consumercode,
		sum(totaltaxamt)as totalcollectableinarrears,
		sum(totalcollectedamt)as totalcollectedinarrears
	from
		egbs_demand_v1 egdm1
	inner join(
		select
			d_detail.DEMANDID,
			SUM(d_detail.TAXAMOUNT)as TOTALTAXAMT,
			SUM(d_detail.COLLECTIONAMOUNT)as TOTALCOLLECTEDAMT
		from
			EGBS_DEMANDDETAIL_V1 d_detail
		where
			d_detail.tenantid = 'od.cuttack'
			and d_detail.taxheadcode like 'WS%'
		group by
			d_detail.DEMANDID)egdd1 on
		egdm1.id = egdd1.demandid
	where
		date(to_timestamp(taxperiodto / 1000))< date('2021-09-01')
		and ispaymentcompleted = false
		and businessservice = 'WS'
		and STATUS = 'ACTIVE'
		and tenantid = 'od.cuttack'
	group by
		consumercode)arreardtl on
	EWC.connectionno = arreardtl.consumercode
left outer join(
	select
		name,
		mobilenumber,
		address,
		connectionid
	from
		eg_ws_connectionholder ewch
	inner join(
		select
			name,
			mobilenumber,
			address,
			egu.uuid
		from
			eg_user egu
		inner join eg_user_address eguad on
			eguad.userid = egu.id
		where
			eguad.type = 'CORRESPONDENCE')usr on
		ewch.userid = usr.uuid)conholder on
	ewc.id = conholder.connectionid
where
	EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED'
	and DM.STATUS = 'ACTIVE'
	and DM.BUSINESSSERVICE = 'WS'
	and ewc.tenantid = 'od.cuttack'
	and ews.connectiontype = 'Non Metered'
	and
	case
		when LOWER('01') = 'nil' then EWC.ADDITIONALDETAILS ->> 'ward' is null
		else EWC.ADDITIONALDETAILS ->> 'ward' = '01'
	end
	and (date(formattedtaxperiodto) >= date('2021-09-01')
	and date(formattedtaxperiodto) <= date('2021-09-30'));
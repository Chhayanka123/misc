2021-12-10 07:00:50.569+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:00:50.570+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:50.570+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:50.570+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:50.571+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:50.571+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:50.572+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:00:50.572+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:00:50.572+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:50.572+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:50.744+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : total query execution time taken in millisecount:174 
2021-12-10 07:00:50.745+0000  INFO --- [080-exec-2] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : Sending message to topic: enc-report-audit-data, partition: null with key: 8f8ffc37-ca47-495d-b390-865bb246bf4f . 
2021-12-10 07:00:50.751+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=4c232623-7325-46a9-b8e0-216a663e311d : Response code sent: 200 
2021-12-10 07:00:51.132+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:00:51.134+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:51.134+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:51.134+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:51.134+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:51.134+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:51.135+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:00:51.135+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:00:51.135+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:51.135+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:51.297+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : total query execution time taken in millisecount:164 
2021-12-10 07:00:51.298+0000  INFO --- [080-exec-4] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : Sending message to topic: enc-report-audit-data, partition: null with key: ce753613-fdd1-4aad-9005-802088a8ab72 . 
2021-12-10 07:00:51.306+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=95fd8edd-5e29-4039-b277-0397d9008f84 : Response code sent: 200 
2021-12-10 07:00:54.057+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:00:54.058+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:54.059+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:54.059+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:54.059+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:54.059+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:54.060+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:00:54.061+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:00:54.061+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:54.061+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:54.220+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : total query execution time taken in millisecount:162 
2021-12-10 07:00:54.220+0000  INFO --- [080-exec-6] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : Sending message to topic: enc-report-audit-data, partition: null with key: 2d268337-bb17-4dde-bbe8-bcf9a5f06d0e . 
2021-12-10 07:00:54.245+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=6e5e4da6-6c4c-4278-9808-17ce71f758f4 : Response code sent: 200 
2021-12-10 07:00:55.179+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:00:55.180+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:55.180+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:55.180+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:55.180+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:55.180+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:55.181+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:00:55.181+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:00:55.181+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:55.181+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:55.343+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : total query execution time taken in millisecount:163 
2021-12-10 07:00:55.343+0000  INFO --- [080-exec-3] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : Sending message to topic: enc-report-audit-data, partition: null with key: 3a1513ca-b326-4300-9c59-0475d8bbba11 . 
2021-12-10 07:00:55.418+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=62b8e2b5-2425-43e5-97e9-30f9000ff27a : Response code sent: 200 
2021-12-10 07:00:57.069+0000  INFO --- [080-exec-7] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:00:57.070+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:57.071+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:57.071+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:57.071+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:57.071+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:57.073+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:00:57.073+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:00:57.074+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:57.074+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:57.240+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : total query execution time taken in millisecount:170 
2021-12-10 07:00:57.240+0000  INFO --- [080-exec-7] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : Sending message to topic: enc-report-audit-data, partition: null with key: 6d95f196-1992-4d64-b457-6d615f0d1d41 . 
2021-12-10 07:00:57.337+0000  INFO --- [080-exec-7] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=ebff414c-e536-4b57-9d86-62c2387e21bc : Response code sent: 200 
2021-12-10 07:00:58.061+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:00:58.062+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:58.062+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:58.063+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:58.063+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:58.063+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:58.064+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:00:58.065+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:00:58.065+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:58.065+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:58.232+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : total query execution time taken in millisecount:170 
2021-12-10 07:00:58.233+0000  INFO --- [080-exec-5] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : Sending message to topic: enc-report-audit-data, partition: null with key: 0529088d-2821-43b2-a36a-6f3f2d4c997b . 
2021-12-10 07:00:58.323+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=7cb804fe-bde1-4793-9db4-c16f874654fa : Response code sent: 200 
2021-12-10 07:00:59.090+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:00:59.091+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:59.091+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:59.091+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:59.091+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:59.091+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:00:59.092+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:00:59.092+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:00:59.093+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:59.093+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:00:59.287+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : total query execution time taken in millisecount:196 
2021-12-10 07:00:59.288+0000  INFO --- [80-exec-10] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : Sending message to topic: enc-report-audit-data, partition: null with key: 9df5373a-8d01-4be3-9bb3-cf4fc60d16b5 . 
2021-12-10 07:00:59.294+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=5ce1b3eb-b382-4989-9964-d73521b23671 : Response code sent: 200 
2021-12-10 07:01:02.200+0000  INFO --- [080-exec-8] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:01:02.202+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:02.202+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:02.202+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:02.202+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:02.202+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:02.204+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:01:02.204+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:01:02.205+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:02.205+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:02.383+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : total query execution time taken in millisecount:181 
2021-12-10 07:01:02.383+0000  INFO --- [080-exec-8] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : Sending message to topic: enc-report-audit-data, partition: null with key: ddd645a8-6107-48b1-bb7d-be99d09c9564 . 
2021-12-10 07:01:02.420+0000  INFO --- [080-exec-8] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=2bcef272-bff6-4435-82b7-6da7e1420842 : Response code sent: 200 
2021-12-10 07:01:26.852+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:01:26.853+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:26.853+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:26.853+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:26.853+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:26.854+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:26.855+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:01:26.855+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:01:26.855+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:26.855+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:27.019+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : total query execution time taken in millisecount:166 
2021-12-10 07:01:27.020+0000  INFO --- [080-exec-1] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : Sending message to topic: enc-report-audit-data, partition: null with key: 81cd9744-806d-474f-9fe9-2b69d9004b5c . 
2021-12-10 07:01:27.494+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=3660f529-7b6f-4294-98e7-8e17d8f31279 : Response code sent: 200 
2021-12-10 07:01:27.812+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:01:27.813+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:27.813+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:27.813+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:27.813+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:27.813+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:27.814+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:01:27.814+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:01:27.815+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:27.815+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:27.991+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : total query execution time taken in millisecount:178 
2021-12-10 07:01:27.991+0000  INFO --- [080-exec-4] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : Sending message to topic: enc-report-audit-data, partition: null with key: c6474ede-ab7a-405b-a0e7-506b00668e66 . 
2021-12-10 07:01:27.999+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=df00cc8f-8a9e-45e3-a41f-aa457d4adbe1 : Response code sent: 200 
2021-12-10 07:01:28.963+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:01:28.965+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:28.965+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:28.965+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:28.965+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:28.965+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:28.968+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:01:28.968+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:01:28.969+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:28.970+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:29.153+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : total query execution time taken in millisecount:187 
2021-12-10 07:01:29.153+0000  INFO --- [080-exec-6] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : Sending message to topic: enc-report-audit-data, partition: null with key: 707f2e80-baaa-412c-9c4f-59eb12b6f63f . 
2021-12-10 07:01:29.331+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=e6641466-dea2-4402-b220-0c100ea3c530 : Response code sent: 200 
2021-12-10 07:01:31.112+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:01:31.113+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:31.113+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:31.113+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:31.113+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:31.114+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:31.115+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:01:31.115+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:01:31.115+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:31.115+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:31.328+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : total query execution time taken in millisecount:215 
2021-12-10 07:01:31.329+0000  INFO --- [080-exec-3] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : Sending message to topic: enc-report-audit-data, partition: null with key: 3d77fe11-db41-4a2a-9570-6f42b776a602 . 
2021-12-10 07:01:31.421+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=8769ee74-da89-4c55-a7f7-a72e6d145966 : Response code sent: 200 
2021-12-10 07:01:32.490+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:01:32.491+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:32.491+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:32.491+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:32.491+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:32.492+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:01:32.493+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:01:32.494+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:01:32.494+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:32.495+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:01:32.687+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : total query execution time taken in millisecount:196 
2021-12-10 07:01:32.687+0000  INFO --- [080-exec-5] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : Sending message to topic: enc-report-audit-data, partition: null with key: be275cee-426c-4d9f-9247-aff88e496375 . 
2021-12-10 07:01:32.918+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=8b278291-2220-46d6-9921-41b07decff4d : Response code sent: 200 
2021-12-10 07:02:19.860+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : Received request URI: https://report/report/rainmaker-pt/PropertyWiseDemandsReport/_get  
2021-12-10 07:02:19.861+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : select INITCAP(SPLIT_PART(EPP.TENANTID,'.',2)) as ULB,epa.ward as ward,epp.propertyid, epp.oldpropertyid,EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER, concat(COALESCE(epa.doorno,'') ,COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address, to_char(to_timestamp(edv.taxperiodfrom/1000),'Mon-YYYY') as taxperiodfrom, to_char(to_timestamp(edv.taxperiodto / 1000),'Mon-YYYY') as taxperiodto,coalesce(edv2.taxamount, 0) taxamount,coalesce(edv2.collectionamount,0) collectionamount,edv2.taxamount- edv2.collectionamount as dueAmount from eg_pt_property epp inner join egbs_demand_v1 edv on epp.tenantid=$tenant and edv.tenantid=$tenant and edv.consumercode=epp.propertyid left outer join (select demandid,sum(taxamount) as taxamount,sum(collectionamount) as collectionamount from egbs_demanddetail_v1 edv3 where edv3.tenantid=$tenant group by demandid) edv2 on edv.tenantid=$tenant and edv2.demandid=edv.id inner join eg_pt_address epa on epa.tenantid=$tenant and epp.id=epa.propertyid LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID WHERE epp.status != 'INACTIVE'
 
2021-12-10 07:02:19.861+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : select INITCAP(SPLIT_PART(EPP.TENANTID,'.',2)) as ULB,epa.ward as ward,epp.propertyid, epp.oldpropertyid,EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER, concat(COALESCE(epa.doorno,'') ,COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address, to_char(to_timestamp(edv.taxperiodfrom/1000),'Mon-YYYY') as taxperiodfrom, to_char(to_timestamp(edv.taxperiodto / 1000),'Mon-YYYY') as taxperiodto,coalesce(edv2.taxamount, 0) taxamount,coalesce(edv2.collectionamount,0) collectionamount,edv2.taxamount- edv2.collectionamount as dueAmount from eg_pt_property epp inner join egbs_demand_v1 edv on epp.tenantid=$tenant and edv.tenantid=$tenant and edv.consumercode=epp.propertyid left outer join (select demandid,sum(taxamount) as taxamount,sum(collectionamount) as collectionamount from egbs_demanddetail_v1 edv3 where edv3.tenantid=$tenant group by demandid) edv2 on edv.tenantid=$tenant and edv2.demandid=edv.id inner join eg_pt_address epa on epa.tenantid=$tenant and epp.id=epa.propertyid LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID WHERE epp.status != 'INACTIVE'
 
2021-12-10 07:02:19.861+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : select INITCAP(SPLIT_PART(EPP.TENANTID,'.',2)) as ULB,epa.ward as ward,epp.propertyid, epp.oldpropertyid,EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER, concat(COALESCE(epa.doorno,'') ,COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address, to_char(to_timestamp(edv.taxperiodfrom/1000),'Mon-YYYY') as taxperiodfrom, to_char(to_timestamp(edv.taxperiodto / 1000),'Mon-YYYY') as taxperiodto,coalesce(edv2.taxamount, 0) taxamount,coalesce(edv2.collectionamount,0) collectionamount,edv2.taxamount- edv2.collectionamount as dueAmount from eg_pt_property epp inner join egbs_demand_v1 edv on epp.tenantid=$tenant and edv.tenantid=$tenant and edv.consumercode=epp.propertyid left outer join (select demandid,sum(taxamount) as taxamount,sum(collectionamount) as collectionamount from egbs_demanddetail_v1 edv3 where edv3.tenantid=$tenant group by demandid) edv2 on edv.tenantid=$tenant and edv2.demandid=edv.id inner join eg_pt_address epa on epa.tenantid=$tenant and epp.id=epa.propertyid LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID WHERE epp.status != 'INACTIVE'
 
2021-12-10 07:02:19.861+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : select INITCAP(SPLIT_PART(EPP.TENANTID,'.',2)) as ULB,epa.ward as ward,epp.propertyid, epp.oldpropertyid,EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER, concat(COALESCE(epa.doorno,'') ,COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address, to_char(to_timestamp(edv.taxperiodfrom/1000),'Mon-YYYY') as taxperiodfrom, to_char(to_timestamp(edv.taxperiodto / 1000),'Mon-YYYY') as taxperiodto,coalesce(edv2.taxamount, 0) taxamount,coalesce(edv2.collectionamount,0) collectionamount,edv2.taxamount- edv2.collectionamount as dueAmount from eg_pt_property epp inner join egbs_demand_v1 edv on epp.tenantid=$tenant and edv.tenantid=$tenant and edv.consumercode=epp.propertyid left outer join (select demandid,sum(taxamount) as taxamount,sum(collectionamount) as collectionamount from egbs_demanddetail_v1 edv3 where edv3.tenantid=$tenant group by demandid) edv2 on edv.tenantid=$tenant and edv2.demandid=edv.id inner join eg_pt_address epa on epa.tenantid=$tenant and epp.id=epa.propertyid LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID WHERE epp.status != 'INACTIVE'
 
2021-12-10 07:02:19.862+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-pt
    reportName: PropertyWiseDemandsReport
    summary: Property Wise Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EPP.TENANTID,'.',2)) as ULB,epa.ward as ward,epp.propertyid, epp.oldpropertyid,EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER, concat(COALESCE(epa.doorno,'') ,COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address, to_char(to_timestamp(edv.taxperiodfrom/1000),'Mon-YYYY') as taxperiodfrom, to_char(to_timestamp(edv.taxperiodto / 1000),'Mon-YYYY') as taxperiodto,coalesce(edv2.taxamount, 0) taxamount,coalesce(edv2.collectionamount,0) collectionamount,edv2.taxamount- edv2.collectionamount as dueAmount from eg_pt_property epp inner join egbs_demand_v1 edv on epp.tenantid=$tenant and edv.tenantid=$tenant and edv.consumercode=epp.propertyid left outer join (select demandid,sum(taxamount) as taxamount,sum(collectionamount) as collectionamount from egbs_demanddetail_v1 edv3 where edv3.tenantid=$tenant group by demandid) edv2 on edv.tenantid=$tenant and edv2.demandid=edv.id inner join eg_pt_address epa on epa.tenantid=$tenant and epp.id=epa.propertyid LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID WHERE epp.status != 'INACTIVE'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: reports.pt.ulb
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: propertyid
            }
            label: Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldpropertyid
            }
            label: Old Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Mobile Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Financial Year From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Financial Year To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxamount
            }
            label: Total Demand Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Paid Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: dueamount
            }
            label: Due Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: tenant
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: propertyid
            }
            label: Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldpropertyid
            }
            label: Old Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:02:19.862+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : generate baseQuery :select INITCAP(SPLIT_PART(EPP.TENANTID,'.',2)) as ULB,epa.ward as ward,epp.propertyid, epp.oldpropertyid,EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER, concat(COALESCE(epa.doorno,'') ,COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address, to_char(to_timestamp(edv.taxperiodfrom/1000),'Mon-YYYY') as taxperiodfrom, to_char(to_timestamp(edv.taxperiodto / 1000),'Mon-YYYY') as taxperiodto,coalesce(edv2.taxamount, 0) taxamount,coalesce(edv2.collectionamount,0) collectionamount,edv2.taxamount- edv2.collectionamount as dueAmount from eg_pt_property epp inner join egbs_demand_v1 edv on epp.tenantid=$tenant and edv.tenantid=$tenant and edv.consumercode=epp.propertyid left outer join (select demandid,sum(taxamount) as taxamount,sum(collectionamount) as collectionamount from egbs_demanddetail_v1 edv3 where edv3.tenantid=$tenant group by demandid) edv2 on edv.tenantid=$tenant and edv2.demandid=edv.id inner join eg_pt_address epa on epa.tenantid=$tenant and epp.id=epa.propertyid LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID WHERE epp.status != 'INACTIVE'
 AND epp.tenantid = $tenant AND epp.propertyid = $propertyid and case when LOWER($ward)='nil' then epa.ward is null else epa.ward =$ward end order by epp.propertyid 
2021-12-10 07:02:19.863+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : baseQuery :select INITCAP(SPLIT_PART(EPP.TENANTID,'.',2)) as ULB,epa.ward as ward,epp.propertyid, epp.oldpropertyid,EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER, concat(COALESCE(epa.doorno,'') ,COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address, to_char(to_timestamp(edv.taxperiodfrom/1000),'Mon-YYYY') as taxperiodfrom, to_char(to_timestamp(edv.taxperiodto / 1000),'Mon-YYYY') as taxperiodto,coalesce(edv2.taxamount, 0) taxamount,coalesce(edv2.collectionamount,0) collectionamount,edv2.taxamount- edv2.collectionamount as dueAmount from eg_pt_property epp inner join egbs_demand_v1 edv on epp.tenantid=:tenant and edv.tenantid=:tenant and edv.consumercode=epp.propertyid left outer join (select demandid,sum(taxamount) as taxamount,sum(collectionamount) as collectionamount from egbs_demanddetail_v1 edv3 where edv3.tenantid=:tenant group by demandid) edv2 on edv.tenantid=:tenant and edv2.demandid=edv.id inner join eg_pt_address epa on epa.tenantid=:tenant and epp.id=epa.propertyid LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = :tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID WHERE epp.status != 'INACTIVE'
 AND epp.tenantid = :tenant AND epp.propertyid = :propertyid and case when LOWER(:ward)='nil' then epa.ward is null else epa.ward =:ward end order by epp.propertyid 
2021-12-10 07:02:19.863+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : final query:select INITCAP(SPLIT_PART(EPP.TENANTID,'.',2)) as ULB,epa.ward as ward,epp.propertyid, epp.oldpropertyid,EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER, concat(COALESCE(epa.doorno,'') ,COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address, to_char(to_timestamp(edv.taxperiodfrom/1000),'Mon-YYYY') as taxperiodfrom, to_char(to_timestamp(edv.taxperiodto / 1000),'Mon-YYYY') as taxperiodto,coalesce(edv2.taxamount, 0) taxamount,coalesce(edv2.collectionamount,0) collectionamount,edv2.taxamount- edv2.collectionamount as dueAmount from eg_pt_property epp inner join egbs_demand_v1 edv on epp.tenantid=:tenant and edv.tenantid=:tenant and edv.consumercode=epp.propertyid left outer join (select demandid,sum(taxamount) as taxamount,sum(collectionamount) as collectionamount from egbs_demanddetail_v1 edv3 where edv3.tenantid=:tenant group by demandid) edv2 on edv.tenantid=:tenant and edv2.demandid=edv.id inner join eg_pt_address epa on epa.tenantid=:tenant and epp.id=epa.propertyid LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = :tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID WHERE epp.status != 'INACTIVE'
 AND epp.tenantid = :tenant AND epp.propertyid = :propertyid and case when LOWER(:ward)='nil' then epa.ward is null else epa.ward =:ward end order by epp.propertyid 
2021-12-10 07:02:19.960+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : total query execution time taken in millisecount:99 
2021-12-10 07:02:19.961+0000  INFO --- [080-exec-4] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : Sending message to topic: enc-report-audit-data, partition: null with key: e964b276-0acf-4bbb-9c99-fc33115a4844 . 
2021-12-10 07:02:19.968+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=536e5cea-5f25-41f1-aaab-77073133cd2b : Response code sent: 200 
2021-12-10 07:04:26.340+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:04:26.341+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:26.341+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:26.341+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:26.341+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:26.341+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:26.343+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:04:26.343+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:04:26.343+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:04:26.343+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:04:26.508+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : total query execution time taken in millisecount:167 
2021-12-10 07:04:26.508+0000  INFO --- [080-exec-5] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : Sending message to topic: enc-report-audit-data, partition: null with key: c0ce16ad-0cdc-4edd-b429-cf1abf894776 . 
2021-12-10 07:04:26.522+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=42c4877f-98c8-48fa-9221-650d04ab388d : Response code sent: 200 
2021-12-10 07:04:51.702+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:04:51.704+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:51.704+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:51.704+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:51.704+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:51.704+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:51.706+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:04:51.707+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:04:51.707+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:04:51.707+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:04:51.916+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : total query execution time taken in millisecount:212 
2021-12-10 07:04:51.917+0000  INFO --- [080-exec-9] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : Sending message to topic: enc-report-audit-data, partition: null with key: 5081095b-c905-4dba-a178-a2fc8044f06d . 
2021-12-10 07:04:51.925+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=f5df8d72-b6fb-49f4-81e5-13c8d2463ec3 : Response code sent: 200 
2021-12-10 07:04:53.218+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:04:53.219+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:53.220+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:53.220+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:53.220+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:53.220+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:04:53.221+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:04:53.221+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:04:53.222+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:04:53.222+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:04:53.436+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : total query execution time taken in millisecount:217 
2021-12-10 07:04:53.437+0000  INFO --- [080-exec-2] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : Sending message to topic: enc-report-audit-data, partition: null with key: 01b8781f-272f-483b-8580-ab07658a1ca4 . 
2021-12-10 07:04:53.542+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=9b55fd29-8012-4282-8ffc-9afe04a3cfa4 : Response code sent: 200 
2021-12-10 07:05:17.943+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:05:17.945+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:17.945+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:17.945+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:17.945+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:17.945+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:17.947+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:05:17.947+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:05:17.948+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:17.948+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:18.104+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : total query execution time taken in millisecount:159 
2021-12-10 07:05:18.105+0000  INFO --- [080-exec-1] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : Sending message to topic: enc-report-audit-data, partition: null with key: c5affb4c-6d5f-4562-9818-70580b92f726 . 
2021-12-10 07:05:18.267+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=aedcea26-6471-4def-bad0-8c695b1956fc : Response code sent: 200 
2021-12-10 07:05:18.736+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:05:18.736+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.736+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.736+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.737+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.737+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.737+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:05:18.737+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:05:18.738+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:18.738+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:18.839+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:05:18.840+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.840+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.840+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.840+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.840+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:18.841+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:05:18.841+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:05:18.842+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:18.842+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:18.893+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : total query execution time taken in millisecount:157 
2021-12-10 07:05:18.893+0000  INFO --- [080-exec-6] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : Sending message to topic: enc-report-audit-data, partition: null with key: 8e205bda-6622-4209-a63e-87ad9e674821 . 
2021-12-10 07:05:18.900+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=eb44c40e-333a-4734-85c4-052c275a920b : Response code sent: 200 
2021-12-10 07:05:19.017+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : total query execution time taken in millisecount:177 
2021-12-10 07:05:19.017+0000  INFO --- [080-exec-3] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : Sending message to topic: enc-report-audit-data, partition: null with key: e7fdf4e6-8ead-4473-bb9b-a78f7e0ca887 . 
2021-12-10 07:05:19.119+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=79b492a3-c15e-49d9-92b8-8a83b5f77c9b : Response code sent: 200 
2021-12-10 07:05:33.401+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:05:33.402+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:33.402+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:33.402+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:33.402+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:33.403+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:33.404+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:05:33.404+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:05:33.405+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:33.405+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:33.577+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : total query execution time taken in millisecount:175 
2021-12-10 07:05:33.578+0000  INFO --- [80-exec-10] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : Sending message to topic: enc-report-audit-data, partition: null with key: 4d076593-c020-45f0-8fdf-951000632b4f . 
2021-12-10 07:05:33.777+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=fa468dc0-3dc6-411f-9a96-de018553c082 : Response code sent: 200 
2021-12-10 07:05:34.112+0000  INFO --- [080-exec-8] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:05:34.113+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:34.114+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:34.114+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:34.114+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:34.114+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:34.115+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:05:34.116+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:05:34.116+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:34.116+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:34.281+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : total query execution time taken in millisecount:168 
2021-12-10 07:05:34.281+0000  INFO --- [080-exec-8] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : Sending message to topic: enc-report-audit-data, partition: null with key: ed018214-1864-4c78-a139-4e1e6b0f7d7a . 
2021-12-10 07:05:34.317+0000  INFO --- [080-exec-8] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=a94200b7-eeb0-49e5-87d2-77480b904780 : Response code sent: 200 
2021-12-10 07:05:37.110+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:05:37.111+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:37.112+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:37.112+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:37.112+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:37.112+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:37.113+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:05:37.113+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:05:37.114+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:37.114+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:37.278+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : total query execution time taken in millisecount:167 
2021-12-10 07:05:37.278+0000  INFO --- [080-exec-9] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : Sending message to topic: enc-report-audit-data, partition: null with key: 66ba0f6c-8384-418d-a0f7-1f26298fb491 . 
2021-12-10 07:05:37.676+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=17fd860b-98fe-4d57-aa1b-99710643e1e1 : Response code sent: 200 
2021-12-10 07:05:38.059+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:05:38.060+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:38.061+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:38.061+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:38.061+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:38.061+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:38.062+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:05:38.063+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:05:38.063+0000  INFO --- [080-exec-2] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:38.063+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:38.242+0000  INFO --- [080-exec-2] o.e.r.r.ReportRepository                 -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : total query execution time taken in millisecount:182 
2021-12-10 07:05:38.243+0000  INFO --- [080-exec-2] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : Sending message to topic: enc-report-audit-data, partition: null with key: 7fa681f1-992e-4328-929f-bd4bc4b79aae . 
2021-12-10 07:05:38.317+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=83fb7da6-5569-4ea8-a5dd-9a4923857122 : Response code sent: 200 
2021-12-10 07:05:40.329+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:05:40.330+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:40.330+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:40.331+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:40.331+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:40.331+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:05:40.332+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:05:40.332+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:05:40.332+0000  INFO --- [080-exec-1] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:40.332+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:05:40.527+0000  INFO --- [080-exec-1] o.e.r.r.ReportRepository                 -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : total query execution time taken in millisecount:197 
2021-12-10 07:05:40.527+0000  INFO --- [080-exec-1] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : Sending message to topic: enc-report-audit-data, partition: null with key: 818f2eb4-3b36-4988-b3d2-d7dd33263d1d . 
2021-12-10 07:05:40.816+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=55452566-7126-487a-b487-20d80f5f72d1 : Response code sent: 200 
2021-12-10 07:06:01.984+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:06:01.985+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:01.985+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:01.985+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:01.985+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:01.986+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:01.987+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:06:01.987+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:06:01.988+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:01.988+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:02.158+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : total query execution time taken in millisecount:173 
2021-12-10 07:06:02.158+0000  INFO --- [080-exec-3] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : Sending message to topic: enc-report-audit-data, partition: null with key: 98860f67-661f-4926-ad6b-a97f5c1ba189 . 
2021-12-10 07:06:02.317+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=7801fbea-8aad-42d9-b689-77ecd9d889e1 : Response code sent: 200 
2021-12-10 07:06:02.795+0000  INFO --- [080-exec-7] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:06:02.796+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:02.797+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:02.797+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:02.797+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:02.797+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:02.798+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:06:02.799+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:06:02.799+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:02.799+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:02.989+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : total query execution time taken in millisecount:193 
2021-12-10 07:06:02.990+0000  INFO --- [080-exec-7] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : Sending message to topic: enc-report-audit-data, partition: null with key: d9b94d0b-48dc-4bb5-8a65-8586d932fe65 . 
2021-12-10 07:06:02.997+0000  INFO --- [080-exec-7] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=5a6f727e-033f-4e17-be48-c2eb684fde53 : Response code sent: 200 
2021-12-10 07:06:05.686+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:06:05.687+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:05.687+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:05.687+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:05.687+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:05.687+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:05.688+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:06:05.688+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:06:05.688+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:05.688+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:05.845+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : total query execution time taken in millisecount:158 
2021-12-10 07:06:05.846+0000  INFO --- [080-exec-5] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : Sending message to topic: enc-report-audit-data, partition: null with key: a00ed615-e469-48b2-8f8f-58aeee49b275 . 
2021-12-10 07:06:06.044+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=97528ee9-e269-44ab-8696-63a98b4e74ab : Response code sent: 200 
2021-12-10 07:06:06.158+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:06:06.159+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.159+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.159+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.159+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.159+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.161+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:06:06.161+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:06:06.162+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:06.162+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:06.334+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : total query execution time taken in millisecount:175 
2021-12-10 07:06:06.334+0000  INFO --- [80-exec-10] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : Sending message to topic: enc-report-audit-data, partition: null with key: 74aea31c-be05-48b4-b028-070e95049338 . 
2021-12-10 07:06:06.417+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=2df7dc1d-88d4-46c4-ae40-cfd85f401f49 : Response code sent: 200 
2021-12-10 07:06:06.772+0000  INFO --- [080-exec-8] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:06:06.773+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.774+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.774+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.774+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.774+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:06.776+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:06:06.776+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:06:06.777+0000  INFO --- [080-exec-8] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:06.777+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:06.939+0000  INFO --- [080-exec-8] o.e.r.r.ReportRepository                 -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : total query execution time taken in millisecount:166 
2021-12-10 07:06:06.940+0000  INFO --- [080-exec-8] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : Sending message to topic: enc-report-audit-data, partition: null with key: daaa42cf-e959-41f5-98cd-34b97fc7c4a0 . 
2021-12-10 07:06:07.227+0000  INFO --- [080-exec-8] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=aa631079-40b5-4b58-8bef-2f197f0854c1 : Response code sent: 200 
2021-12-10 07:06:39.822+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:06:39.823+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:39.823+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:39.823+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:39.823+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:39.824+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:39.825+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:06:39.825+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:06:39.826+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:39.826+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:39.988+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : total query execution time taken in millisecount:165 
2021-12-10 07:06:39.988+0000  INFO --- [080-exec-4] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : Sending message to topic: enc-report-audit-data, partition: null with key: 3adf2cdd-0498-4fd9-8de9-7db0870658a2 . 
2021-12-10 07:06:40.016+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=756aa52c-fc1a-4ad8-b6f2-d8ceda9a2307 : Response code sent: 200 
2021-12-10 07:06:40.710+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:06:40.712+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:40.712+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:40.712+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:40.712+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:40.712+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:40.714+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:06:40.714+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:06:40.715+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:40.715+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:40.908+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : total query execution time taken in millisecount:196 
2021-12-10 07:06:40.909+0000  INFO --- [080-exec-6] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : Sending message to topic: enc-report-audit-data, partition: null with key: 1033da6f-abc8-4f88-9e8a-4205c5ed18e6 . 
2021-12-10 07:06:40.915+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=ed8e979e-7062-47f3-a9de-87885a36236e : Response code sent: 200 
2021-12-10 07:06:41.626+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:06:41.628+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:41.628+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:41.628+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:41.628+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:41.629+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:06:41.630+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:06:41.630+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:06:41.631+0000  INFO --- [080-exec-3] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:41.631+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:06:41.808+0000  INFO --- [080-exec-3] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : total query execution time taken in millisecount:180 
2021-12-10 07:06:41.808+0000  INFO --- [080-exec-3] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : Sending message to topic: enc-report-audit-data, partition: null with key: 934f42a1-c5ed-4d04-9c3b-2e686a86b89d . 
2021-12-10 07:06:41.915+0000  INFO --- [080-exec-3] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=f7c82a03-e84a-444f-ac95-5eda049c9c98 : Response code sent: 200 
2021-12-10 07:08:42.870+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:08:42.872+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: ulb
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:08:42.872+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : Pattern is:null 
2021-12-10 07:08:42.872+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : patterns:[Ljava.lang.String;@78b4d63b 
2021-12-10 07:08:42.872+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:08:42.872+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:08:42.872+0000  INFO --- [80-exec-10] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:08:42.878+0000  INFO --- [80-exec-10] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:08:42.884+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: connectiontype
        }
        label: Connection Type
        type: singlevaluelist
        defaultValue: null
        isMandatory: false
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
} 
2021-12-10 07:08:42.884+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : Pattern is:null 
2021-12-10 07:08:42.884+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : patterns:[Ljava.lang.String;@3f2f0c1e 
2021-12-10 07:08:42.884+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:08:42.884+0000  INFO --- [80-exec-10] o.e.r.s.IntegrationService               -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:08:42.884+0000  INFO --- [80-exec-10] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od with verb POST 
2021-12-10 07:08:42.886+0000  INFO --- [80-exec-10] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:08:42.887+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=cc06204e-b734-43ed-a700-7624e06ecbde : Response code sent: 200 
2021-12-10 07:09:28.226+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:09:28.227+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:09:28.228+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:09:28.228+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:09:28.228+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:09:28.228+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:09:28.229+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:09:28.229+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:09:28.230+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:09:28.230+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:09:28.811+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : total query execution time taken in millisecount:584 
2021-12-10 07:09:28.811+0000  INFO --- [080-exec-4] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : Sending message to topic: enc-report-audit-data, partition: null with key: 44ff6836-7882-44a4-ac40-cb9ff84d19c2 . 
2021-12-10 07:09:29.030+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=c9733d07-77c6-4e0c-aea8-e502944bc577 : Response code sent: 200 
2021-12-10 07:11:23.545+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=fb5661dc-ff7f-4e24-b328-2593c4ff18f0 : Received request URI: https://report/report/rainmaker-ws/EmployeeWiseWSCollectionReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:11:23.546+0000 ERROR --- [080-exec-6] o.e.r.service.ReportService              -- CORRELATION_ID=fb5661dc-ff7f-4e24-b328-2593c4ff18f0 : Invalid report config 

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.report.service.ReportService.getMetaData(ReportService.java:70)
	at org.egov.controller.ReportController.createv1(ReportController.java:116)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:11:23.547+0000 ERROR --- [080-exec-6] o.e.c.ReportController                   -- CORRELATION_ID=fb5661dc-ff7f-4e24-b328-2593c4ff18f0 : Error in getting report data 

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.report.service.ReportService.getMetaData(ReportService.java:70)
	at org.egov.controller.ReportController.createv1(ReportController.java:116)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:11:23.547+0000 ERROR --- [080-exec-6] o.egov.tracer.ExceptionAdvise            -- CORRELATION_ID=fb5661dc-ff7f-4e24-b328-2593c4ff18f0 : Exception caught in tracer  

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.controller.ReportController.createv1(ReportController.java:120)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:11:23.548+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=fb5661dc-ff7f-4e24-b328-2593c4ff18f0 : Response code sent: 400 
2021-12-10 07:23:17.250+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:23:17.252+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: ulb
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:23:17.252+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : Pattern is:null 
2021-12-10 07:23:17.252+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : patterns:[Ljava.lang.String;@6c469a08 
2021-12-10 07:23:17.252+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:23:17.253+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:23:17.253+0000  INFO --- [080-exec-2] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:23:17.259+0000  INFO --- [080-exec-2] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:23:17.265+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: connectiontype
        }
        label: Connection Type
        type: singlevaluelist
        defaultValue: null
        isMandatory: false
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
} 
2021-12-10 07:23:17.265+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : Pattern is:null 
2021-12-10 07:23:17.265+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : patterns:[Ljava.lang.String;@12d8756f 
2021-12-10 07:23:17.265+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:23:17.265+0000  INFO --- [080-exec-2] o.e.r.s.IntegrationService               -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:23:17.265+0000  INFO --- [080-exec-2] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od with verb POST 
2021-12-10 07:23:17.268+0000  INFO --- [080-exec-2] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:23:17.269+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=23558278-2456-4ff2-a834-94645194d3ed : Response code sent: 200 
2021-12-10 07:34:48.863+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=dbe2de4b-9595-4b55-ba09-a34bd2c482c6 : Received request URI: https://report/report/rainmaker-ws/WSConnectionsEligibleForDemandGeneration/_get  
2021-12-10 07:34:48.865+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=dbe2de4b-9595-4b55-ba09-a34bd2c482c6 : select INITCAP(SPLIT_PART(EWC.TENANTID,'.',2)) as ULB ,EWC.ADDITIONALDETAILS->>'ward' as ward,count(distinct ewc.connectionno) as connectionscount from  eg_ws_connection ewc inner join eg_ws_service ews  on ewc.tenantid=$ulb and ewc.id = ews.connection_id where ews.connectiontype ='Non Metered' and ewc.applicationstatus ='CONNECTION_ACTIVATED' and ewc.isoldapplication =false and ewc.tenantid =$ulb group by ewc.tenantid,EWC.ADDITIONALDETAILS->>'ward'
 
2021-12-10 07:34:48.865+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=dbe2de4b-9595-4b55-ba09-a34bd2c482c6 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WSConnectionsEligibleForDemandGeneration
    summary: WS Connections Eligible For Demand Generation
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID,'.',2)) as ULB ,EWC.ADDITIONALDETAILS->>'ward' as ward,count(distinct ewc.connectionno) as connectionscount from  eg_ws_connection ewc inner join eg_ws_service ews  on ewc.tenantid=$ulb and ewc.id = ews.connection_id where ews.connectiontype ='Non Metered' and ewc.applicationstatus ='CONNECTION_ACTIVATED' and ewc.isoldapplication =false and ewc.tenantid =$ulb group by ewc.tenantid,EWC.ADDITIONALDETAILS->>'ward'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionscount
            }
            label: No of Connections
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }]
} 
2021-12-10 07:34:48.865+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=dbe2de4b-9595-4b55-ba09-a34bd2c482c6 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID,'.',2)) as ULB ,EWC.ADDITIONALDETAILS->>'ward' as ward,count(distinct ewc.connectionno) as connectionscount from  eg_ws_connection ewc inner join eg_ws_service ews  on ewc.tenantid=$ulb and ewc.id = ews.connection_id where ews.connectiontype ='Non Metered' and ewc.applicationstatus ='CONNECTION_ACTIVATED' and ewc.isoldapplication =false and ewc.tenantid =$ulb group by ewc.tenantid,EWC.ADDITIONALDETAILS->>'ward'
 ; 
2021-12-10 07:34:48.865+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=dbe2de4b-9595-4b55-ba09-a34bd2c482c6 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID,'.',2)) as ULB ,EWC.ADDITIONALDETAILS->>'ward' as ward,count(distinct ewc.connectionno) as connectionscount from  eg_ws_connection ewc inner join eg_ws_service ews  on ewc.tenantid=:ulb and ewc.id = ews.connection_id where ews.connectiontype ='Non Metered' and ewc.applicationstatus ='CONNECTION_ACTIVATED' and ewc.isoldapplication =false and ewc.tenantid =:ulb group by ewc.tenantid,EWC.ADDITIONALDETAILS->>'ward'
 ; 
2021-12-10 07:34:48.865+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=dbe2de4b-9595-4b55-ba09-a34bd2c482c6 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID,'.',2)) as ULB ,EWC.ADDITIONALDETAILS->>'ward' as ward,count(distinct ewc.connectionno) as connectionscount from  eg_ws_connection ewc inner join eg_ws_service ews  on ewc.tenantid=:ulb and ewc.id = ews.connection_id where ews.connectiontype ='Non Metered' and ewc.applicationstatus ='CONNECTION_ACTIVATED' and ewc.isoldapplication =false and ewc.tenantid =:ulb group by ewc.tenantid,EWC.ADDITIONALDETAILS->>'ward'
 ; 
2021-12-10 07:34:49.089+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=dbe2de4b-9595-4b55-ba09-a34bd2c482c6 : total query execution time taken in millisecount:225 
2021-12-10 07:34:49.090+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=dbe2de4b-9595-4b55-ba09-a34bd2c482c6 : Response code sent: 200 
2021-12-10 07:35:13.605+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:35:13.606+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: ulb
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:35:13.607+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : Pattern is:null 
2021-12-10 07:35:13.607+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : patterns:[Ljava.lang.String;@75f4d6fd 
2021-12-10 07:35:13.607+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:35:13.607+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:35:13.607+0000  INFO --- [080-exec-1] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:35:13.612+0000  INFO --- [080-exec-1] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:35:13.615+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: connectiontype
        }
        label: Connection Type
        type: singlevaluelist
        defaultValue: null
        isMandatory: false
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
} 
2021-12-10 07:35:13.615+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : Pattern is:null 
2021-12-10 07:35:13.615+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : patterns:[Ljava.lang.String;@c72c1d 
2021-12-10 07:35:13.615+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:35:13.615+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:35:13.615+0000  INFO --- [080-exec-1] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od with verb POST 
2021-12-10 07:35:13.620+0000  INFO --- [080-exec-1] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:35:13.621+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=ac5ee8be-27e8-4d48-b5c2-321af5580799 : Response code sent: 200 
2021-12-10 07:35:57.348+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=275c62d4-07b2-49c3-b984-d4f02de25475 : Received request URI: https://report/report/rainmaker-ws/EmployeeWiseWSCollectionReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:35:57.350+0000 ERROR --- [80-exec-10] o.e.r.service.ReportService              -- CORRELATION_ID=275c62d4-07b2-49c3-b984-d4f02de25475 : Invalid report config 

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.report.service.ReportService.getMetaData(ReportService.java:70)
	at org.egov.controller.ReportController.createv1(ReportController.java:116)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:35:57.351+0000 ERROR --- [80-exec-10] o.e.c.ReportController                   -- CORRELATION_ID=275c62d4-07b2-49c3-b984-d4f02de25475 : Error in getting report data 

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.report.service.ReportService.getMetaData(ReportService.java:70)
	at org.egov.controller.ReportController.createv1(ReportController.java:116)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:35:57.351+0000 ERROR --- [80-exec-10] o.egov.tracer.ExceptionAdvise            -- CORRELATION_ID=275c62d4-07b2-49c3-b984-d4f02de25475 : Exception caught in tracer  

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.controller.ReportController.createv1(ReportController.java:120)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:35:57.352+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=275c62d4-07b2-49c3-b984-d4f02de25475 : Response code sent: 400 
2021-12-10 07:40:58.881+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : Received request URI: https://report/report/rainmaker-tl/LegacyTLDataReport/metadata/_get  
The Module Name from the URI is :rainmaker-tl
2021-12-10 07:40:58.883+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: ulb
        }
        label: ULB
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: tlmigration
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
} 
2021-12-10 07:40:58.883+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : Pattern is:null 
2021-12-10 07:40:58.883+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : patterns:[Ljava.lang.String;@13fbc5d8 
2021-12-10 07:40:58.883+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants 
2021-12-10 07:40:58.883+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants 
2021-12-10 07:40:58.883+0000  INFO --- [080-exec-9] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=od.jatni&moduleName=tenant&masterName=tenants with verb POST 
2021-12-10 07:40:58.889+0000  INFO --- [080-exec-9] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=od.jatni&moduleName=tenant&masterName=tenants 
2021-12-10 07:40:58.895+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=d71153e1-4a60-4372-a5e1-64cc08837f7b : Response code sent: 200 
2021-12-10 07:41:05.541+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=371ee34a-8779-48ae-9197-6735cc2ca3d4 : Received request URI: https://report/report/rainmaker-tl/TradeLicenseRegistryReport/metadata/_get  
The Module Name from the URI is :rainmaker-tl
2021-12-10 07:41:05.542+0000  INFO --- [080-exec-2] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=371ee34a-8779-48ae-9197-6735cc2ca3d4 : Response code sent: 200 
2021-12-10 07:41:20.874+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : Received request URI: https://report/report/rainmaker-tl/TradeLicenseRegistryReport/_get  
2021-12-10 07:41:20.876+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : SELECT 
  licensenumber,
  to_char(To_timestamp(issueddate / 1000), 'DD/MM/YYYY') as formattedIssuedDate,
  tl.tradeName,
  initcap(tl.status) as status,
  to_char(To_timestamp(receipt.receiptdate / 1000), 'DD/MM/YYYY') as receiptIssueDate , 
  receipt.receiptnumber,
  tradeTypeName,
  acc, 
  name,
  mobilenumber,
  ih.bankid,
  ih.branchname,
  ih.transactionnumber,
  ih.instrumenttype,
  totalamount,
  To_char(To_timestamp(receipt.manualreceiptdate / 1000), 'DD/MM/YYYY') AS g8issuedate,
  receipt.manualreceiptnumber as g8receiptno

FROM eg_tl_tradelicense tl 
INNER JOIN eg_tl_tradelicensedetail tld ON tld.tradelicenseid = tl.id 
INNER JOIN (
  SELECT tradelicensedetailid,array_to_string(array_agg(message.message),', ') as tradeTypeName FROM eg_tl_tradeunit
  INNER JOIN message ON split_part(message.code,'_',2) = tradeType AND message.locale = 'en_IN' GROUP BY 1) tlunit ON tlunit.tradelicensedetailid = tld.id
INNER JOIN (
  SELECT tradelicensedetailid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
  FROM eg_tl_owner tlowner 
  INNER JOIN eg_user tluser ON tluser.uuid = tlowner.id
  group by tradelicensedetailid
) tlown ON tlown.tradelicensedetailid = tld.id
LEFT OUTER JOIN egcl_receiptheader receipt ON receipt.consumercode = tl.applicationnumber  and receipt.status != 'Cancelled'
LEFT OUTER JOIN egcl_receiptinstrument as ri ON ri.receiptheader = receipt.id
LEFT OUTER JOIN egcl_instrumentheader as ih ON ih.id = ri.instrumentheader and ih.instrumentstatus != 'CANCELLED'
LEFT OUTER JOIN (SELECT tradelicensedetailid,array_to_string(array_agg(message.message),',') AS acc FROM eg_tl_accessory 
LEFT OUTER JOIN message ON split_part(message.code,'_',2) = accessorycategory AND message.locale = 'en_IN' GROUP BY 1 ) tlacc ON tlacc.tradelicensedetailid = tld.id 
WHERE tl.Status in ('APPROVED', 'PAID', 'CANCELLED') AND tl.tenantId LIKE $tenantid
 
2021-12-10 07:41:20.876+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : SELECT 
  licensenumber,
  to_char(To_timestamp(issueddate / 1000), 'DD/MM/YYYY') as formattedIssuedDate,
  tl.tradeName,
  initcap(tl.status) as status,
  to_char(To_timestamp(receipt.receiptdate / 1000), 'DD/MM/YYYY') as receiptIssueDate , 
  receipt.receiptnumber,
  tradeTypeName,
  acc, 
  name,
  mobilenumber,
  ih.bankid,
  ih.branchname,
  ih.transactionnumber,
  ih.instrumenttype,
  totalamount,
  To_char(To_timestamp(receipt.manualreceiptdate / 1000), 'DD/MM/YYYY') AS g8issuedate,
  receipt.manualreceiptnumber as g8receiptno

FROM eg_tl_tradelicense tl 
INNER JOIN eg_tl_tradelicensedetail tld ON tld.tradelicenseid = tl.id 
INNER JOIN (
  SELECT tradelicensedetailid,array_to_string(array_agg(message.message),', ') as tradeTypeName FROM eg_tl_tradeunit
  INNER JOIN message ON split_part(message.code,'_',2) = tradeType AND message.locale = 'en_IN' GROUP BY 1) tlunit ON tlunit.tradelicensedetailid = tld.id
INNER JOIN (
  SELECT tradelicensedetailid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
  FROM eg_tl_owner tlowner 
  INNER JOIN eg_user tluser ON tluser.uuid = tlowner.id
  group by tradelicensedetailid
) tlown ON tlown.tradelicensedetailid = tld.id
LEFT OUTER JOIN egcl_receiptheader receipt ON receipt.consumercode = tl.applicationnumber  and receipt.status != 'Cancelled'
LEFT OUTER JOIN egcl_receiptinstrument as ri ON ri.receiptheader = receipt.id
LEFT OUTER JOIN egcl_instrumentheader as ih ON ih.id = ri.instrumentheader and ih.instrumentstatus != 'CANCELLED'
LEFT OUTER JOIN (SELECT tradelicensedetailid,array_to_string(array_agg(message.message),',') AS acc FROM eg_tl_accessory 
LEFT OUTER JOIN message ON split_part(message.code,'_',2) = accessorycategory AND message.locale = 'en_IN' GROUP BY 1 ) tlacc ON tlacc.tradelicensedetailid = tld.id 
WHERE tl.Status in ('APPROVED', 'PAID', 'CANCELLED') AND tl.tenantId LIKE $tenantid
 
2021-12-10 07:41:20.877+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-tl
    reportName: TradeLicenseRegistryReport
    summary: TL Receipt Register Report
    version: 1.0.0
    query: SELECT 
      licensenumber,
      to_char(To_timestamp(issueddate / 1000), 'DD/MM/YYYY') as formattedIssuedDate,
      tl.tradeName,
      initcap(tl.status) as status,
      to_char(To_timestamp(receipt.receiptdate / 1000), 'DD/MM/YYYY') as receiptIssueDate , 
      receipt.receiptnumber,
      tradeTypeName,
      acc, 
      name,
      mobilenumber,
      ih.bankid,
      ih.branchname,
      ih.transactionnumber,
      ih.instrumenttype,
      totalamount,
      To_char(To_timestamp(receipt.manualreceiptdate / 1000), 'DD/MM/YYYY') AS g8issuedate,
      receipt.manualreceiptnumber as g8receiptno
    
    FROM eg_tl_tradelicense tl 
    INNER JOIN eg_tl_tradelicensedetail tld ON tld.tradelicenseid = tl.id 
    INNER JOIN (
      SELECT tradelicensedetailid,array_to_string(array_agg(message.message),', ') as tradeTypeName FROM eg_tl_tradeunit
      INNER JOIN message ON split_part(message.code,'_',2) = tradeType AND message.locale = 'en_IN' GROUP BY 1) tlunit ON tlunit.tradelicensedetailid = tld.id
    INNER JOIN (
      SELECT tradelicensedetailid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
      FROM eg_tl_owner tlowner 
      INNER JOIN eg_user tluser ON tluser.uuid = tlowner.id
      group by tradelicensedetailid
    ) tlown ON tlown.tradelicensedetailid = tld.id
    LEFT OUTER JOIN egcl_receiptheader receipt ON receipt.consumercode = tl.applicationnumber  and receipt.status != 'Cancelled'
    LEFT OUTER JOIN egcl_receiptinstrument as ri ON ri.receiptheader = receipt.id
    LEFT OUTER JOIN egcl_instrumentheader as ih ON ih.id = ri.instrumentheader and ih.instrumentstatus != 'CANCELLED'
    LEFT OUTER JOIN (SELECT tradelicensedetailid,array_to_string(array_agg(message.message),',') AS acc FROM eg_tl_accessory 
    LEFT OUTER JOIN message ON split_part(message.code,'_',2) = accessorycategory AND message.locale = 'en_IN' GROUP BY 1 ) tlacc ON tlacc.tradelicensedetailid = tld.id 
    WHERE tl.Status in ('APPROVED', 'PAID', 'CANCELLED') AND tl.tenantId LIKE $tenantid
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: receiptnumber
            }
            label: report.tl.receiptnumber
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: receiptIssueDate
            }
            label: report.tl.receiptissuedate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: g8issuedate
            }
            label: report.tl.g8issuedate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: g8receiptno
            }
            label: report.tl.g8receiptno
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: licensenumber
            }
            label: report.tl.licensenumber
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: formattedIssuedDate
            }
            label: report.tl.issueddate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: report.tl.user.name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: report.tl.user.mobilenumber
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: bankid
            }
            label: report.tl.bankid
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: branchname
            }
            label: report.tl.branchname
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: transactionumber
            }
            label: report.tl.transactionumber
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: instrumenttype
            }
            label: report.tl.instrumenttype
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: status
            }
            label: report.tl.status
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: tradeTypeName
            }
            label: report.tl.tradetype
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: acc
            }
            label: report.tl.accessorycategories
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: tradeName
            }
            label: report.tl.tradeName
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: totalamount
            }
            label: report.tl.receipt.totalamount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: fromDate
            }
            label: reports.tl.fromDate
            type: epoch
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: toDate
            }
            label: reports.tl.toDate
            type: epoch
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: tl
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:41:20.878+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : generate baseQuery :SELECT 
  licensenumber,
  to_char(To_timestamp(issueddate / 1000), 'DD/MM/YYYY') as formattedIssuedDate,
  tl.tradeName,
  initcap(tl.status) as status,
  to_char(To_timestamp(receipt.receiptdate / 1000), 'DD/MM/YYYY') as receiptIssueDate , 
  receipt.receiptnumber,
  tradeTypeName,
  acc, 
  name,
  mobilenumber,
  ih.bankid,
  ih.branchname,
  ih.transactionnumber,
  ih.instrumenttype,
  totalamount,
  To_char(To_timestamp(receipt.manualreceiptdate / 1000), 'DD/MM/YYYY') AS g8issuedate,
  receipt.manualreceiptnumber as g8receiptno

FROM eg_tl_tradelicense tl 
INNER JOIN eg_tl_tradelicensedetail tld ON tld.tradelicenseid = tl.id 
INNER JOIN (
  SELECT tradelicensedetailid,array_to_string(array_agg(message.message),', ') as tradeTypeName FROM eg_tl_tradeunit
  INNER JOIN message ON split_part(message.code,'_',2) = tradeType AND message.locale = 'en_IN' GROUP BY 1) tlunit ON tlunit.tradelicensedetailid = tld.id
INNER JOIN (
  SELECT tradelicensedetailid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
  FROM eg_tl_owner tlowner 
  INNER JOIN eg_user tluser ON tluser.uuid = tlowner.id
  group by tradelicensedetailid
) tlown ON tlown.tradelicensedetailid = tld.id
LEFT OUTER JOIN egcl_receiptheader receipt ON receipt.consumercode = tl.applicationnumber  and receipt.status != 'Cancelled'
LEFT OUTER JOIN egcl_receiptinstrument as ri ON ri.receiptheader = receipt.id
LEFT OUTER JOIN egcl_instrumentheader as ih ON ih.id = ri.instrumentheader and ih.instrumentstatus != 'CANCELLED'
LEFT OUTER JOIN (SELECT tradelicensedetailid,array_to_string(array_agg(message.message),',') AS acc FROM eg_tl_accessory 
LEFT OUTER JOIN message ON split_part(message.code,'_',2) = accessorycategory AND message.locale = 'en_IN' GROUP BY 1 ) tlacc ON tlacc.tradelicensedetailid = tld.id 
WHERE tl.Status in ('APPROVED', 'PAID', 'CANCELLED') AND tl.tenantId LIKE $tenantid
 AND receipt.createddate >= $fromDate AND receipt.createddate  <= $toDate 
2021-12-10 07:41:20.878+0000  INFO --- [080-exec-6] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : baseQuery :SELECT 
  licensenumber,
  to_char(To_timestamp(issueddate / 1000), 'DD/MM/YYYY') as formattedIssuedDate,
  tl.tradeName,
  initcap(tl.status) as status,
  to_char(To_timestamp(receipt.receiptdate / 1000), 'DD/MM/YYYY') as receiptIssueDate , 
  receipt.receiptnumber,
  tradeTypeName,
  acc, 
  name,
  mobilenumber,
  ih.bankid,
  ih.branchname,
  ih.transactionnumber,
  ih.instrumenttype,
  totalamount,
  To_char(To_timestamp(receipt.manualreceiptdate / 1000), 'DD/MM/YYYY') AS g8issuedate,
  receipt.manualreceiptnumber as g8receiptno

FROM eg_tl_tradelicense tl 
INNER JOIN eg_tl_tradelicensedetail tld ON tld.tradelicenseid = tl.id 
INNER JOIN (
  SELECT tradelicensedetailid,array_to_string(array_agg(message.message),', ') as tradeTypeName FROM eg_tl_tradeunit
  INNER JOIN message ON split_part(message.code,'_',2) = tradeType AND message.locale = 'en_IN' GROUP BY 1) tlunit ON tlunit.tradelicensedetailid = tld.id
INNER JOIN (
  SELECT tradelicensedetailid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
  FROM eg_tl_owner tlowner 
  INNER JOIN eg_user tluser ON tluser.uuid = tlowner.id
  group by tradelicensedetailid
) tlown ON tlown.tradelicensedetailid = tld.id
LEFT OUTER JOIN egcl_receiptheader receipt ON receipt.consumercode = tl.applicationnumber  and receipt.status != 'Cancelled'
LEFT OUTER JOIN egcl_receiptinstrument as ri ON ri.receiptheader = receipt.id
LEFT OUTER JOIN egcl_instrumentheader as ih ON ih.id = ri.instrumentheader and ih.instrumentstatus != 'CANCELLED'
LEFT OUTER JOIN (SELECT tradelicensedetailid,array_to_string(array_agg(message.message),',') AS acc FROM eg_tl_accessory 
LEFT OUTER JOIN message ON split_part(message.code,'_',2) = accessorycategory AND message.locale = 'en_IN' GROUP BY 1 ) tlacc ON tlacc.tradelicensedetailid = tld.id 
WHERE tl.Status in ('APPROVED', 'PAID', 'CANCELLED') AND tl.tenantId LIKE :tenantId
 AND receipt.createddate >= :fromDate AND receipt.createddate  <= :toDate 
2021-12-10 07:41:20.878+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : final query:SELECT 
  licensenumber,
  to_char(To_timestamp(issueddate / 1000), 'DD/MM/YYYY') as formattedIssuedDate,
  tl.tradeName,
  initcap(tl.status) as status,
  to_char(To_timestamp(receipt.receiptdate / 1000), 'DD/MM/YYYY') as receiptIssueDate , 
  receipt.receiptnumber,
  tradeTypeName,
  acc, 
  name,
  mobilenumber,
  ih.bankid,
  ih.branchname,
  ih.transactionnumber,
  ih.instrumenttype,
  totalamount,
  To_char(To_timestamp(receipt.manualreceiptdate / 1000), 'DD/MM/YYYY') AS g8issuedate,
  receipt.manualreceiptnumber as g8receiptno

FROM eg_tl_tradelicense tl 
INNER JOIN eg_tl_tradelicensedetail tld ON tld.tradelicenseid = tl.id 
INNER JOIN (
  SELECT tradelicensedetailid,array_to_string(array_agg(message.message),', ') as tradeTypeName FROM eg_tl_tradeunit
  INNER JOIN message ON split_part(message.code,'_',2) = tradeType AND message.locale = 'en_IN' GROUP BY 1) tlunit ON tlunit.tradelicensedetailid = tld.id
INNER JOIN (
  SELECT tradelicensedetailid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
  FROM eg_tl_owner tlowner 
  INNER JOIN eg_user tluser ON tluser.uuid = tlowner.id
  group by tradelicensedetailid
) tlown ON tlown.tradelicensedetailid = tld.id
LEFT OUTER JOIN egcl_receiptheader receipt ON receipt.consumercode = tl.applicationnumber  and receipt.status != 'Cancelled'
LEFT OUTER JOIN egcl_receiptinstrument as ri ON ri.receiptheader = receipt.id
LEFT OUTER JOIN egcl_instrumentheader as ih ON ih.id = ri.instrumentheader and ih.instrumentstatus != 'CANCELLED'
LEFT OUTER JOIN (SELECT tradelicensedetailid,array_to_string(array_agg(message.message),',') AS acc FROM eg_tl_accessory 
LEFT OUTER JOIN message ON split_part(message.code,'_',2) = accessorycategory AND message.locale = 'en_IN' GROUP BY 1 ) tlacc ON tlacc.tradelicensedetailid = tld.id 
WHERE tl.Status in ('APPROVED', 'PAID', 'CANCELLED') AND tl.tenantId LIKE :tenantId
 AND receipt.createddate >= :fromDate AND receipt.createddate  <= :toDate 
2021-12-10 07:41:20.996+0000  INFO --- [080-exec-6] o.e.r.r.ReportRepository                 -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : total query execution time taken in millisecount:120 
2021-12-10 07:41:20.997+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=8f9c2036-1a11-4b64-9ed6-1545fc96d8cc : Response code sent: 200 
2021-12-10 07:41:57.718+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:41:57.719+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: ulb
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:41:57.719+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : Pattern is:null 
2021-12-10 07:41:57.719+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : patterns:[Ljava.lang.String;@5ba41832 
2021-12-10 07:41:57.719+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:41:57.719+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:41:57.719+0000  INFO --- [080-exec-5] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:41:57.725+0000  INFO --- [080-exec-5] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:41:57.730+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: connectiontype
        }
        label: Connection Type
        type: singlevaluelist
        defaultValue: null
        isMandatory: false
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
} 
2021-12-10 07:41:57.730+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : Pattern is:null 
2021-12-10 07:41:57.730+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : patterns:[Ljava.lang.String;@70402dfe 
2021-12-10 07:41:57.730+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:41:57.730+0000  INFO --- [080-exec-5] o.e.r.s.IntegrationService               -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:41:57.731+0000  INFO --- [080-exec-5] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od with verb POST 
2021-12-10 07:41:57.733+0000  INFO --- [080-exec-5] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:41:57.734+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=c591b487-ec4a-4a6a-b071-db6a99198015 : Response code sent: 200 
2021-12-10 07:42:43.011+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:42:43.013+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: ulb
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:42:43.013+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : Pattern is:null 
2021-12-10 07:42:43.013+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : patterns:[Ljava.lang.String;@7902aabe 
2021-12-10 07:42:43.013+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:42:43.013+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:42:43.013+0000  INFO --- [080-exec-4] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:42:43.016+0000  INFO --- [080-exec-4] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:42:43.021+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: connectiontype
        }
        label: Connection Type
        type: singlevaluelist
        defaultValue: null
        isMandatory: false
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
} 
2021-12-10 07:42:43.021+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : Pattern is:null 
2021-12-10 07:42:43.021+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : patterns:[Ljava.lang.String;@54c0e591 
2021-12-10 07:42:43.021+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:42:43.022+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:42:43.022+0000  INFO --- [080-exec-4] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od with verb POST 
2021-12-10 07:42:43.024+0000  INFO --- [080-exec-4] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:42:43.025+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=46d11442-e90b-4c25-900c-2619cca197f5 : Response code sent: 200 
2021-12-10 07:43:20.713+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:43:20.715+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:43:20.715+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:43:20.715+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:43:20.715+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:43:20.715+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:43:20.717+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:43:20.717+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end 
2021-12-10 07:43:20.718+0000  INFO --- [80-exec-10] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:43:20.718+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end 
2021-12-10 07:43:26.492+0000  INFO --- [80-exec-10] o.e.r.r.ReportRepository                 -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : total query execution time taken in millisecount:5778 
2021-12-10 07:43:26.493+0000  INFO --- [80-exec-10] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : Sending message to topic: enc-report-audit-data, partition: null with key: eeb4b5ba-611d-4e70-8660-fdf1ab2f90a8 . 
2021-12-10 07:43:26.686+0000  INFO --- [80-exec-10] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=573e5c4b-3666-43e0-bc54-097340093f08 : Response code sent: 200 
2021-12-10 07:46:26.435+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:46:26.437+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: ulb
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:46:26.437+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : Pattern is:null 
2021-12-10 07:46:26.437+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : patterns:[Ljava.lang.String;@174ff266 
2021-12-10 07:46:26.437+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:46:26.437+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:46:26.437+0000  INFO --- [080-exec-6] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:46:26.442+0000  INFO --- [080-exec-6] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:46:26.448+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: connectiontype
        }
        label: Connection Type
        type: singlevaluelist
        defaultValue: null
        isMandatory: false
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
} 
2021-12-10 07:46:26.448+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : Pattern is:null 
2021-12-10 07:46:26.448+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : patterns:[Ljava.lang.String;@442afb97 
2021-12-10 07:46:26.448+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:46:26.448+0000  INFO --- [080-exec-6] o.e.r.s.IntegrationService               -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:46:26.448+0000  INFO --- [080-exec-6] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od with verb POST 
2021-12-10 07:46:26.450+0000  INFO --- [080-exec-6] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od 
2021-12-10 07:46:26.451+0000  INFO --- [080-exec-6] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=70081d7b-cca7-46f6-b374-de0e547d7c29 : Response code sent: 200 
2021-12-10 07:47:29.835+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : Received request URI: https://report/report/rainmaker-ws/WaterMonthlyDemandsReport/_get  
2021-12-10 07:47:29.837+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:47:29.837+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:47:29.837+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:47:29.837+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:47:29.837+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 
2021-12-10 07:47:29.839+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-ws
    reportName: WaterMonthlyDemandsReport
    summary: Water Monthly Demands Report
    version: 1.0.0
    query: select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectionno
            }
            label: Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldconnectionno
            }
            label: Old Connection No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: ConnectionType
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Connection Holder Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Contact No
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodfrom
            }
            label: Demand Period From
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: taxperiodto
            }
            label: Demand Period To
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: CURRENTDEMAND
            }
            label: Current Demand
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: collectionamount
            }
            label: Collection Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: REBATEAMOUNT
            }
            label: Rebate Amount
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: PENALTYAMOUNT
            }
            label: Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ADVANCEAMOUNT
            }
            label: Advance
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: arrear
            }
            label: Arrear
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: TOTALDUE
            }
            label: Total Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTBEFOREDUEDATE
            }
            label: Amount Payable after Rebate
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: AMOUNTAFTERDUEDATE
            }
            label: Amount Payable with Penalty
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: startdate
            }
            label: Start Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: enddate
            }
            label: End Date
            type: epoch
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: connectiontype
            }
            label: Connection Type
            type: singlevaluelist
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=ws-services-masters&masterName=connectionType&tenantId=od|MdmsRes.ws-services-masters.connectionType[*].code|MdmsRes.ws-services-masters.connectionType[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:47:29.840+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : generate baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = $ulb AND ews.connectiontype = $connectiontype and case when LOWER($ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = $ward  end AND (date(formattedtaxperiodto) >= date($startdate) AND date(formattedtaxperiodto) <= date($enddate)) 
2021-12-10 07:47:29.841+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : baseQuery :select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) 
2021-12-10 07:47:29.841+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : final query:select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=:ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=:ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=:ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=:ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=:ulb AND dd.tenantid=:ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(:startdate)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=:ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = :ulb AND ews.connectiontype = :connectiontype and case when LOWER(:ward) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = :ward  end AND (date(formattedtaxperiodto) >= date(:startdate) AND date(formattedtaxperiodto) <= date(:enddate)) 
2021-12-10 07:48:30.106+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : Query Execution Failed Due To Timeout:  

org.springframework.dao.DataAccessResourceFailureException: PreparedStatementCallback; SQL [select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND,DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_WS_CONNECTION EWC inner join EG_WS_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_REBATE' AND tenantid=?)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'WS_TIME_PENALTY' AND tenantid=?)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'WS_ADVANCE_CARRYFORWARD' AND tenantid=?)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'WS_CHARGE' AND egb1.tenantid=?)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=? AND dd.tenantid=? GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date(?)AND ispaymentcompleted=false AND businessservice='WS' AND STATUS = 'ACTIVE' AND tenantid=? group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_ws_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'WS'
 AND ewc.tenantid = ? AND ews.connectiontype = ? and case when LOWER(?) = 'nil'  then EWC.ADDITIONALDETAILS ->> 'ward' is null  else EWC.ADDITIONALDETAILS ->> 'ward' = ?  end AND (date(formattedtaxperiodto) >= date(?) AND date(formattedtaxperiodto) <= date(?))]; ERROR: canceling statement due to user request; nested exception is org.postgresql.util.PSQLException: ERROR: canceling statement due to user request
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:694)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:748)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:216)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForList(NamedParameterJdbcTemplate.java:296)
	at org.egov.report.repository.ReportRepository.getData(ReportRepository.java:93)
	at org.egov.report.repository.ReportRepository$$FastClassBySpringCGLIB$$8644b123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.egov.report.repository.ReportRepository$$EnhancerBySpringCGLIB$$ef5090aa.getData(<generated>)
	at org.egov.report.service.ReportService.getReportData(ReportService.java:227)
	at org.egov.report.service.ReportService.getAllReportData(ReportService.java:214)
	at org.egov.controller.ReportController.getReportDatav1(ReportController.java:129)
	at sun.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.postgresql.util.PSQLException: ERROR: canceling statement due to user request
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2578)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2313)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:331)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:448)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:369)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:159)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:109)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at io.opentracing.contrib.jdbc.TracingPreparedStatement.executeQuery(TracingPreparedStatement.java:75)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:678)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 79 common frames omitted

2021-12-10 07:48:30.107+0000 ERROR --- [080-exec-9] o.e.c.ReportController                   -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : Error in getting Report data ver1 

org.egov.tracer.model.CustomException: Query failed, as it took more than: 60 seconds to execute
	at org.egov.report.repository.ReportRepository.getData(ReportRepository.java:100)
	at org.egov.report.repository.ReportRepository$$FastClassBySpringCGLIB$$8644b123.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.egov.report.repository.ReportRepository$$EnhancerBySpringCGLIB$$ef5090aa.getData(<generated>)
	at org.egov.report.service.ReportService.getReportData(ReportService.java:227)
	at org.egov.report.service.ReportService.getAllReportData(ReportService.java:214)
	at org.egov.controller.ReportController.getReportDatav1(ReportController.java:129)
	at sun.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:48:30.108+0000 ERROR --- [080-exec-9] o.egov.tracer.ExceptionAdvise            -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : Exception caught in tracer  

org.egov.tracer.model.CustomException: Query failed, as it took more than: 60 seconds to execute
	at org.egov.controller.ReportController.getReportDatav1(ReportController.java:133)
	at sun.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:48:30.109+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=facb0983-a35f-492e-8e86-1c9b5fb476e5 : Response code sent: 400 
2021-12-10 07:49:58.441+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : Received request URI: https://report/report/rainmaker-pt/ULBWisePropertyDetailsReport/metadata/_get  
The Module Name from the URI is :rainmaker-pt
2021-12-10 07:49:58.443+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: tenant
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:49:58.443+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : Pattern is:null 
2021-12-10 07:49:58.443+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : patterns:[Ljava.lang.String;@45019303 
2021-12-10 07:49:58.443+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:49:58.443+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:49:58.443+0000  INFO --- [080-exec-1] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:49:58.448+0000  INFO --- [080-exec-1] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:49:58.454+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=d71a838b-2a4c-43fb-84cf-77b121dfe397 : Response code sent: 200 
2021-12-10 07:50:10.345+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : Received request URI: https://report/report/rainmaker-pt/ULBWisePropertyDetailsReport/_get  
2021-12-10 07:50:10.346+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 
2021-12-10 07:50:10.346+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 
2021-12-10 07:50:10.347+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-pt
    reportName: ULBWisePropertyDetailsReport
    summary: ULB Wise Property Details Report
    version: 1.0.0
    query: select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldpropertyid
            }
            label: Old Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: propertyid
            }
            label: Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Mobile Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: tenant
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:50:10.347+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : generate baseQuery :select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 AND epp.tenantid = $tenant and case when LOWER($ward)='nil' then epa.ward is null else epa.ward =$ward end 
2021-12-10 07:50:10.347+0000  INFO --- [080-exec-4] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : baseQuery :select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 AND epp.tenantid = :tenant and case when LOWER(:ward)='nil' then epa.ward is null else epa.ward =:ward end 
2021-12-10 07:50:10.348+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : final query:select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 AND epp.tenantid = :tenant and case when LOWER(:ward)='nil' then epa.ward is null else epa.ward =:ward end 
2021-12-10 07:50:10.441+0000  INFO --- [080-exec-4] o.e.r.r.ReportRepository                 -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : total query execution time taken in millisecount:95 
2021-12-10 07:50:10.445+0000  INFO --- [080-exec-4] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : Sending request to http://egov-enc-service:8080/egov-enc-service/crypto/v1/_decrypt with verb POST 
2021-12-10 07:50:10.455+0000  INFO --- [080-exec-4] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : Received response from http://egov-enc-service:8080/egov-enc-service/crypto/v1/_decrypt 
2021-12-10 07:50:10.456+0000  INFO --- [080-exec-4] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : Sending message to topic: enc-report-audit-data, partition: null with key: e1ef7d1a-3412-4433-a77e-63154a7141c3 . 
2021-12-10 07:50:10.491+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=f201507d-c470-43d9-8c23-b97108377de4 : Response code sent: 200 
2021-12-10 07:50:19.256+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : Received request URI: https://report/report/rainmaker-pt/ULBWisePropertyDetailsReport/_get  
2021-12-10 07:50:19.257+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 
2021-12-10 07:50:19.257+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 
2021-12-10 07:50:19.258+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-pt
    reportName: ULBWisePropertyDetailsReport
    summary: ULB Wise Property Details Report
    version: 1.0.0
    query: select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ulb
            }
            label: ULB Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldpropertyid
            }
            label: Old Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: propertyid
            }
            label: Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Mobile Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: address
            }
            label: Address
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: tenant
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:50:19.258+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : generate baseQuery :select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 AND epp.tenantid = $tenant 
2021-12-10 07:50:19.258+0000  INFO --- [080-exec-9] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : baseQuery :select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 AND epp.tenantid = :tenant 
2021-12-10 07:50:19.258+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : final query:select initcap(split_part(epp.tenantid, '.', 2)) as ulb,epa.ward,epp.oldpropertyid,epp.propertyid,eu."name",eu.mobilenumber,concat(COALESCE(epa.doorno,''),COALESCE(', '||epa.buildingname,''),COALESCE(', '||epa.street,''),COALESCE(', '||epa.city,''),COALESCE(', PIN-'||epa.pincode,'')) as address from eg_pt_property epp inner join eg_pt_owner epo on epo.propertyid = epp.id left outer join eg_user eu on eu.uuid = epo.userid inner join eg_pt_address epa on epa.propertyid = epp.id WHERE epp.status <> 'INACTIVE'
 AND epp.tenantid = :tenant 
2021-12-10 07:50:20.266+0000  INFO --- [080-exec-9] o.e.r.r.ReportRepository                 -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : total query execution time taken in millisecount:1008 
2021-12-10 07:50:20.333+0000  INFO --- [080-exec-9] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : Sending request to http://egov-enc-service:8080/egov-enc-service/crypto/v1/_decrypt with verb POST 
2021-12-10 07:50:20.415+0000  INFO --- [080-exec-9] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : Received response from http://egov-enc-service:8080/egov-enc-service/crypto/v1/_decrypt 
2021-12-10 07:50:20.434+0000  INFO --- [080-exec-9] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : Sending message to topic: enc-report-audit-data, partition: null with key: 9e0f5f88-f6d8-4803-9258-04e5a17f83f0 . 
2021-12-10 07:50:20.533+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=45991f09-11bc-4c08-b99a-253e0870c9e8 : Response code sent: 200 
2021-12-10 07:51:02.421+0000  INFO --- [080-exec-8] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=daa0fa05-40f6-4a55-a7ec-41a58fb2d180 : Received request URI: https://report/report/rainmaker-ws/EmployeeWiseWSCollectionReport/metadata/_get  
The Module Name from the URI is :rainmaker-ws
2021-12-10 07:51:02.422+0000 ERROR --- [080-exec-8] o.e.r.service.ReportService              -- CORRELATION_ID=daa0fa05-40f6-4a55-a7ec-41a58fb2d180 : Invalid report config 

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.report.service.ReportService.getMetaData(ReportService.java:70)
	at org.egov.controller.ReportController.createv1(ReportController.java:116)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:51:02.423+0000 ERROR --- [080-exec-8] o.e.c.ReportController                   -- CORRELATION_ID=daa0fa05-40f6-4a55-a7ec-41a58fb2d180 : Error in getting report data 

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.report.service.ReportService.getMetaData(ReportService.java:70)
	at org.egov.controller.ReportController.createv1(ReportController.java:116)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:51:02.424+0000 ERROR --- [080-exec-8] o.egov.tracer.ExceptionAdvise            -- CORRELATION_ID=daa0fa05-40f6-4a55-a7ec-41a58fb2d180 : Exception caught in tracer  

org.egov.tracer.model.CustomException: Error in retrieving report definition
	at org.egov.controller.ReportController.createv1(ReportController.java:120)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at io.opentracing.contrib.web.servlet.filter.TracingFilter.doFilter(TracingFilter.java:165)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.egov.tracer.http.filters.TracerFilter.doFilter(TracerFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2021-12-10 07:51:02.424+0000  INFO --- [080-exec-8] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=daa0fa05-40f6-4a55-a7ec-41a58fb2d180 : Response code sent: 400 
2021-12-10 07:51:32.249+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : Received request URI: https://report/report/rainmaker-pt/ULBWiseTaxCollectionReport/metadata/_get  
The Module Name from the URI is :rainmaker-pt
2021-12-10 07:51:32.250+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: tenant
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: false
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:51:32.250+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : Pattern is:null 
2021-12-10 07:51:32.251+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : patterns:[Ljava.lang.String;@6b22468 
2021-12-10 07:51:32.251+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:32.251+0000  INFO --- [080-exec-1] o.e.r.s.IntegrationService               -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:32.251+0000  INFO --- [080-exec-1] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:51:32.256+0000  INFO --- [080-exec-1] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:32.267+0000  INFO --- [080-exec-1] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=d352082c-e376-452d-8b06-37d783298f5a : Response code sent: 200 
2021-12-10 07:51:45.695+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : Received request URI: https://report/report/rainmaker-pt/PropertyWiseDemandsReport/metadata/_get  
The Module Name from the URI is :rainmaker-pt
2021-12-10 07:51:45.696+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: tenant
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:51:45.696+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : Pattern is:null 
2021-12-10 07:51:45.696+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : patterns:[Ljava.lang.String;@6c480fb2 
2021-12-10 07:51:45.696+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:45.696+0000  INFO --- [080-exec-4] o.e.r.s.IntegrationService               -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:45.697+0000  INFO --- [080-exec-4] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:51:45.702+0000  INFO --- [080-exec-4] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:45.709+0000  INFO --- [080-exec-4] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=60a042a1-4485-4571-bdef-48960635b463 : Response code sent: 200 
2021-12-10 07:51:48.595+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : Received request URI: https://report/report/rainmaker-pt/PropertyWiseCollectionReport/metadata/_get  
The Module Name from the URI is :rainmaker-pt
2021-12-10 07:51:48.596+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : if searchColumn:class SearchColumn {
    class ColumnDetail {
        class ColumnDef {
            name: tenant
        }
        label: ULB Name
        type: singlevaluelist
        defaultValue: null
        isMandatory: true
        showColumn: true
    }
    source: pt
    colName: null
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
} 
2021-12-10 07:51:48.596+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : Pattern is:null 
2021-12-10 07:51:48.596+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : patterns:[Ljava.lang.String;@667b77e1 
2021-12-10 07:51:48.596+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:48.596+0000  INFO --- [080-exec-9] o.e.r.s.IntegrationService               -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : url:http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:48.597+0000  INFO --- [080-exec-9] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : Sending request to http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od with verb POST 
2021-12-10 07:51:48.600+0000  INFO --- [080-exec-9] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : Received response from http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od 
2021-12-10 07:51:48.607+0000  INFO --- [080-exec-9] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=65552c4f-ce05-49b8-8dd6-6d3a5ccdfb04 : Response code sent: 200 
2021-12-10 07:52:14.288+0000  INFO --- [080-exec-7] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : Received request URI: https://report/report/rainmaker-pt/PropertyWiseCollectionReport/_get  
2021-12-10 07:52:14.289+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 
2021-12-10 07:52:14.289+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 
2021-12-10 07:52:14.290+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 
2021-12-10 07:52:14.290+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 
2021-12-10 07:52:14.291+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-pt
    reportName: PropertyWiseCollectionReport
    summary: Property Wise Collection Report
    version: 1.0.0
    query: select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Consumer Id
            }
            label: Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldpropertyid
            }
            label: Old Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Mobile Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Due before payment
            }
            label: Due Before Payment
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Amount paid
            }
            label: Amount Paid
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Current Due
            }
            label: Current Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Receipt Number
            }
            label: Receipt Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Receipt Date
            }
            label: Receipt Date
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Payment Mode
            }
            label: Payment Mode
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: tenant
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: propertyid
            }
            label: Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldpropertyid
            }
            label: Old Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 07:52:14.291+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : generate baseQuery :select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 WHERE epp.tenantid = $tenant AND epp.propertyid = $propertyid and case when LOWER($ward)='nil' then epa.ward is null else epa.ward =$ward end 
2021-12-10 07:52:14.291+0000  INFO --- [080-exec-7] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : baseQuery :select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = :tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = :tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 WHERE epp.tenantid = :tenant AND epp.propertyid = :propertyid and case when LOWER(:ward)='nil' then epa.ward is null else epa.ward =:ward end 
2021-12-10 07:52:14.291+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : final query:select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = :tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = :tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 WHERE epp.tenantid = :tenant AND epp.propertyid = :propertyid and case when LOWER(:ward)='nil' then epa.ward is null else epa.ward =:ward end 
2021-12-10 07:52:14.354+0000  INFO --- [080-exec-7] o.e.r.r.ReportRepository                 -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : total query execution time taken in millisecount:65 
2021-12-10 07:52:14.354+0000  INFO --- [080-exec-7] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : Sending request to http://egov-enc-service:8080/egov-enc-service/crypto/v1/_decrypt with verb POST 
2021-12-10 07:52:14.359+0000  INFO --- [080-exec-7] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : Received response from http://egov-enc-service:8080/egov-enc-service/crypto/v1/_decrypt 
2021-12-10 07:52:14.359+0000  INFO --- [080-exec-7] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : Sending message to topic: enc-report-audit-data, partition: null with key: 10d12e89-fca7-4931-b1ae-036f6eb0bc76 . 
2021-12-10 07:52:14.384+0000  INFO --- [080-exec-7] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=41a071fd-ced4-470f-86f5-0807b711ae41 : Response code sent: 200 
2021-12-10 08:01:01.209+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : Received request URI: https://report/report/rainmaker-pt/PropertyWiseCollectionReport/_get  
2021-12-10 08:01:01.210+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 
2021-12-10 08:01:01.210+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 
2021-12-10 08:01:01.210+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 
2021-12-10 08:01:01.210+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 
2021-12-10 08:01:01.211+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : ReportDefinition: class ReportDefinition {
    moduleName: rainmaker-pt
    reportName: PropertyWiseCollectionReport
    summary: Property Wise Collection Report
    version: 1.0.0
    query: select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
    
    linkedReport: null
    sourceColumns: [class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Consumer Id
            }
            label: Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldpropertyid
            }
            label: Old Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: name
            }
            label: Name
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: mobilenumber
            }
            label: Mobile Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Due before payment
            }
            label: Due Before Payment
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Amount paid
            }
            label: Amount Paid
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Current Due
            }
            label: Current Due
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Receipt Number
            }
            label: Receipt Number
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Receipt Date
            }
            label: Receipt Date
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }, class SourceColumn {
        class ColumnDetail {
            class ColumnDef {
                name: Payment Mode
            }
            label: Payment Mode
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        linkedReport: null
        isExternal: false
        url: null
        jsonPath: null
        dependsOn: null
    }]
    searchParams: [class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: tenant
            }
            label: ULB Name
            type: singlevaluelist
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: propertyid
            }
            label: Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: oldpropertyid
            }
            label: Old Property Id
            type: string
            defaultValue: null
            isMandatory: false
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }, class SearchColumn {
        class ColumnDetail {
            class ColumnDef {
                name: ward
            }
            label: Ward (Eg NIL,01,02,..)
            type: string
            defaultValue: null
            isMandatory: true
            showColumn: true
        }
        source: pt
        colName: null
        pattern: null
    }]
} 
2021-12-10 08:01:01.211+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : generate baseQuery :select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = $tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = $tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 AND epp.propertyid = $propertyid WHERE epp.tenantid = $tenant and case when LOWER($ward)='nil' then epa.ward is null else epa.ward =$ward end 
2021-12-10 08:01:01.212+0000  INFO --- [080-exec-5] o.e.r.r.b.ReportQueryBuilder             -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : baseQuery :select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = :tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = :tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 AND epp.propertyid = :propertyid WHERE epp.tenantid = :tenant and case when LOWER(:ward)='nil' then epa.ward is null else epa.ward =:ward end 
2021-12-10 08:01:01.212+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : final query:select distinct edv.consumercode as "Consumer Id",EPP.OLDPROPERTYID,EPA.WARD AS WARD, 	EU.NAME AS NAME,EU.MOBILENUMBER MOBILENUMBER,ep2.receiptnumber as "Receipt Number" , to_char(to_timestamp(ep2.receiptdate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Receipt Date" , ep2.due as "Due before payment" , ep2.amountpaid "Amount paid" ,ep2.due - ep2.amountpaid "Current Due",  to_char(to_timestamp(ep.transactiondate / 1000), 'DD-Mon-YYYY HH:mm:SS') as "Payment Date" , ep.paymentmode as "Payment Mode", ep.paymentstatus as "Payment Status" , ep.paidby as "Paid by" from egbs_demand_v1 edv inner join egbs_demanddetail_v1 edv2 on edv.id = edv2.demandid right outer join egcl_billdetial eb2 on eb2.demandid = edv.id left outer join egcl_bill eb on eb.id = eb2.billid left outer join egcl_paymentdetail ep2 on ep2.billid = eb.id left outer join egcl_payment ep on ep.id=ep2.paymentid LEFT OUTER JOIN EG_PT_PROPERTY EPP ON EPP.STATUS!='INACTIVE' AND EPP.PROPERTYID=EDV.CONSUMERCODE LEFT OUTER JOIN EG_PT_ADDRESS EPA ON EPA.TENANTID = :tenant AND EPP.ID=EPA.PROPERTYID LEFT OUTER JOIN eg_pt_owner epo on EPO.TENANTID = :tenant AND EPO.STATUS='ACTIVE' AND EPO.PROPERTYID = EPP.ID LEFT OUTER JOIN eg_user eu on EU.UUID = EPO.USERID
 AND epp.propertyid = :propertyid WHERE epp.tenantid = :tenant and case when LOWER(:ward)='nil' then epa.ward is null else epa.ward =:ward end 
2021-12-10 08:01:01.245+0000  INFO --- [080-exec-5] o.e.r.r.ReportRepository                 -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : total query execution time taken in millisecount:35 
2021-12-10 08:01:01.246+0000  INFO --- [080-exec-5] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : Sending request to http://egov-enc-service:8080/egov-enc-service/crypto/v1/_decrypt with verb POST 
2021-12-10 08:01:01.249+0000  INFO --- [080-exec-5] o.e.t.h.RestTemplateLoggingInterceptor   -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : Received response from http://egov-enc-service:8080/egov-enc-service/crypto/v1/_decrypt 
2021-12-10 08:01:01.250+0000  INFO --- [080-exec-5] o.e.t.k.KafkaTemplateLoggingInterceptors -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : Sending message to topic: enc-report-audit-data, partition: null with key: d5ee6359-c6c8-4d3d-b0f2-c81d6234a1ba . 
2021-12-10 08:01:01.334+0000  INFO --- [080-exec-5] o.e.t.h.filters.TracerFilter             -- CORRELATION_ID=e999b6e4-6f1f-4616-ae57-7f508baa30d2 : Response code sent: 200 
